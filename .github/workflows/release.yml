name: Release create-meta

on:
  push:
    branches:
      - release/*
  pull_request:
    branches:
      - main

jobs:

  pre-release-check:
    name: Perform checks before releasing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check commit has been pushed on origin/main
        run: |
          git fetch --quiet origin main
          git merge-base --is-ancestor HEAD origin/main

  test-ruby:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        ruby: ['2.5', '2.6', '2.7', '3.0']
        include:
          - os: windows-latest
            ruby: '3.0'
          - os: macos-latest
            ruby: '3.0'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          working-directory: ruby
      - name: bundle exec rspec
        working-directory: ruby
        run: bundle exec rspec

  test-javascript:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node-version: ['12.x', '14.x', '16.x']
        include:
          - os: windows-latest
            node-version: '16.x'
          - os: macos-latest
            node-version: '16.x'

    runs-on: ${{ matrix.os }}
    steps:
    - name: set git core.autocrlf to 'input'
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v2
    - name: with Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: javascript/package-lock.json
    - run: npm install-test
      working-directory: javascript

  test-java:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        java: ['11', '16']
        include:
          - os: windows-latest
            java: '16'
          - os: macos-latest
            java: '16'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - run: mvn install
        working-directory: java
      - run: mvn test
        working-directory: java
      - run: ./scripts/check-jar.sh
        working-directory: java

  publish-rubygem:
    name: Publish Ruby Gem
    needs: [pre-release-check, test-java, test-javascript, test-ruby]
    runs-on: ubuntu-latest
    environment: Release

    steps:
      - uses: actions/checkout@v2

      # - name: Publish ruby gem
      #   uses: cucumber/action-publish-rubygem@v1.0.0
      #   with:
      #     working_directory: ruby
      #     rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}

  publish-mvn:
    name: Publish Maven Package
    needs: [pre-release-check, test-java, test-javascript, test-ruby]
    runs-on: ubuntu-latest
    environment: Release

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      # - uses: cucumber/action-publish-mvn@v1.0.0
      #   with:
      #     gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
      #     gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      #     nexus-username: cukebot
      #     nexus-password: ${{ secrets.SONATYPE_PASSWORD }}
      #     working-directory: java

  publish-npm:
    name: Publish NPM module
    needs: [pre-release-check, test-java, test-javascript, test-ruby]
    runs-on: ubuntu-latest
    environment: Release

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '17'
          cache: 'npm'
          cache-dependency-path: javascript/package-lock.json

      # - uses: cucumber/action-publish-npm@v1.0.0
      #   with:
      #     npm-token: ${{ secrets.NPM_TOKEN }}
      #     working-directory: javascript

  create-github-release:
    name: Create GitHub Release and Git tag
    needs: [publish-rubygem, publish-mvn, publish-npm]
    runs-on: ubuntu-latest
    environment: Release
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2
      # - uses: cucumber/action-create-github-release@v1.1.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
