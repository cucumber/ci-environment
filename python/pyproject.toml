[build-system]
build-backend = "uv_build"
requires = ["uv_build>=0.9.0,<0.10.0"]

[dependency-groups]
dev = [
  "coverage>=7.6.1",
  "pytest>=8.3.5",
  "python-dotenv>=1.0.1"
]

[project]
authors = [
  {name = "Cucumber Limited", email = "cukes@googlegroups.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS :: MacOS X",
  "Topic :: Utilities",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]
dependencies = [
  "importlib_resources"
]
description = "This library detects the CI environment based on environment variables defined by CI servers."
keywords = ["cucumber", "ci"]
license = "MIT"
license-files = [
  "LICENSE"
]
maintainers = [
  {name = "Konstantin Goloveshko", email = "kostya.goloveshko@gmail.com"}
]
name = "ci-environment"
readme = "README.md"
requires-python = ">=3.8"
version = "11.0.0"

[project.urls]
Changelog = "https://github.com/cucumber/ci-environment/releases"
Download = "https://pypi.org/project/ci-environment/"
Homepage = "https://github.com/cucumber/ci-environment"
Issues = "https://github.com/cucumber/ci-environment/issues"
Repository = "https://github.com/cucumber/ci-environment"

[tool.mypy]
files = "src/ci_environment/**/*.py"
install_types = true
non_interactive = true
plugins = [
  "pydantic.mypy"
]
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
]

[tool.ruff.lint]
extend-select = [
  "B",
  "C4",
  "FURB",
  "I",
  "ISC",
  "N",
  "PERF",
  "PIE",
  "RET",
  "TID",
  "UP"
]

[tool.tox]
env_list = ["lint", "3.12", "3.11", "3.10", "3.9", "3.8", "pypy310", "pypy39", "pypy38"]
requires = ["tox>=4.22"]

[tool.tox.env.lint]
commands = [["pre-commit", "run", "--all-files", "--show-diff-on-failure"]]
deps = ["pre-commit-uv>=4.1.1"]
description = "Run linting and formatting checks (and auto-fixes)"

[tool.tox.env_run_base]
commands = [
  ["coverage", "run", "--append", "-m", "pytest", "-vvl"]
]
dependency_groups = [
  "dev"
]
